﻿#Script para controle de qualidade do TEPT março 2019

#1) Remover indels e SNPs com mais de dois alelos

plink --bfile ptsd_genotype --snps-only just-acgt --make-bed --out ptsd_genotype_semindels
#caso não funcione, substituir just-actg por no-DI

#2) Gráficos qc

#Checar frequência do alelo raro
plink --bfile ptsd_genotype_semindels --freq --out freq_genotipagem --noweb

#Checar indivíduos / SNPs com falhas
plink --bfile ptsd_genotype_semindels --missing --out erro_genotipagem --noweb #arquivo .imiss para indivíduos e .lmiss para SNPs

#Checar Eq. de HW
plink --bfile ptsd_genotype_semindels --hardy --out eq_hardy --noweb

#Checar indivíduos heterozigotos
plink --bfile ptsd_genotype_semindels --het --out taxa_heterozigotos

#Plotar histogramas dos valores anteriores: no Rstudio:
library(ggplot2)
library(grid)
library(xtable)

erro_variante <- read.table("erro_genotipagem.lmiss", header = T)
erro_individuos <- read.table("erro_genotipagem.imiss", header = T)
frequencia_geno <- read.table("freq_genotipagem.frq", header = T)
heterozigotos <- read.table("taxa_heterozigotos.het", header = T)
hardyweinberg <- read.table("eq_hardy.hwe", header = T)

#Frequência do alelo raro (MAF):
pdf("plot_MAF.pdf")
hist(frequencia_geno$MAF, n=1000, main="MAF", xlab= "Frequência do alelo raro", ylab= "nº de SNPs", col= "lightpink4")
hist(frequencia_geno$MAF, n=1000, main="MAF<0.1", xlim=c(0,0.1), xlab= "Frequência do alelo raro", ylab= "nº de SNPs", col= "lightpink4")
hist(frequencia_geno$MAF, n=1000, main="MAF<0.05", xlim=c(0,0.05), xlab= "Frequência do alelo raro", ylab= "nº de SNPs", col= "lightpink4")
hist(frequencia_geno$MAF, n=1000, main="MAF<0.01", xlim=c(0,0.01), xlab= "Frequência do alelo raro", ylab= "nº de SNPs", col= "lightpink4")
dev.off()

#Frequência de individual missingness
pdf("plot_imiss.pdf")
hist(erro_individuos$F_MISS, n=1000, main="Individual missingness <0.001", col= "lightpink4",  ylab= "nº de pessoas", xlab= "% de SNPs não genotipados")
hist(erro_individuos$F_MISS, n=1000, main="Individual missingness <0.2", xlim=c(0,0.2), col= "lightpink4", ylab= "nº de pessoas", xlab= "% de SNPs não genotipados")
hist(erro_individuos$F_MISS, n=1000, main="Individual missingness <0.1", xlim=c(0,0.1), col= "lightpink4", ylab= "nº de pessoas", xlab= "% de SNPs não genotipados")
hist(erro_individuos$F_MISS, n=1000, main="Individual missingness <0.02", xlim=c(0,0.02), col= "lightpink4", ylab= "nº de pessoas", xlab= "% de SNPs não genotipados")
dev.off()

#Frequência de locus missingness
pdf("plot_lmiss.pdf")
hist(erro_variante$F_MISS, n=100, main="Locus missingness", col= "lightpink4", xlab= "% de pessoas", ylab= "nº de SNPs")
hist(erro_variante$F_MISS, n=100, main="Locus missingness <0.2", xlim=c(0,0.2), col= "lightpink4", xlab= "% de pessoas", ylab= "nº de SNPs")
hist(erro_variante$F_MISS, n=100, main="Locus missingness <0.1", xlim=c(0,0.1), col= "lightpink4", xlab= "% de pessoas", ylab= "nº de SNPs")
hist(erro_variante$F_MISS, n=100, main="Locus missingness <0.02", xlim=c(0,0.02), col= "lightpink4", xlab= "% de pessoas", ylab= "nº de SNPs")
dev.off()

#P-valor associado ao HWE
pdf("plot_hwe.pdf")
hist(-log10(hardyweinberg$P), n=1000, main="Equilíbrio de Hardy-Weinberg", col= "lightpink4", xlab = "-log10(P)", ylab="nºde SNPs")
hist(-log10(hardyweinberg$P), n=1000, main="Equilíbrio de Hardy-Weinberg p>10^-10", xlim=c(0,10), col= "lightpink4", xlab = "-log10(P)", ylab="nºde SNPs")
hist(-log10(hardyweinberg$P), n=1000, main="Equilíbrio de Hardy-Weinberg p>10^-5", xlim=c(0,5), col= "lightpink4", xlab = "-log10(P)", ylab="nºde SNPs")
dev.off()

#3) Filtros

#filtrar MAF (frequência do menor alelo), GENO (taxa de SNPs n genotipados), MIND (taxa de individuos n genotipados) e HWE (eq. Hardy-Weinberg)
plink --bfile ptsd_genotype_semindels --maf 0.01 --mind 0.01 --geno 0.01 --hwe 0.001 --make-bed --out ptsd_genotype_QC


#4) Sex-check
#Separar a parte homóloga XY (baseado no hg 19 que é o pedido pelo Sanger Imputation)
plink --bfile ptsd_genotype --split-x b37 --make-bed --out ptsd_genotype_split

### OBS: se o plink não deixar porque já existe um ‘XY’, fazer
plink --bfile ptsd_genotype --merge-x --make-bed --out ptsd_genotype_merge
plink --bfile ptsd_genotype_merge --split-x b37 --make-bed --out ptsd_genotype_split

#Testar qual fica melhor
plink --bfile ptsd_genotype_split --check-sex --out ptsd_sexcheck
plink --bfile ptsd_genotype_split --check-sex ycount --out ptsd_sexcheck_y

#ver o no. de PROBLEM no arquivo .sexcheck
#Abrir os outputs no R e plotar gráfico F statistic por sex label. Se quase todos os pontos masculinos estiverem agrupados à direita e os femininos mais separados, está correta a distribuicao. Ver qual fica melhor e prosseguir com esse método (só sexcheck ou sexcheck com ycount)

#OBS: para o tept não excluí nenhum indivíduo pois deram apenas 3 indivíduos discordantes e a distribuição pelo gráfico estava adequada (indivíduos femininos discordantes estavam próximo do threshold 0.2)

#5) Remover cromossomos indesejados (0: unknown, 23: X, 24: Y, 25: XY homóloga, 26: mitocondrial)
plink --bfile ptsd_genotype_QC --not-chr 0,23-26 --make-bed --keep-allele-order --out ptsd_genotype_QC_semXY

#7) IBD: gera o arquivo ibd_calculation.genome, que contém o cálculo IBD
plink --bfile ptsd_QC_semXY --genome --min 0.125 --out ibd_calculation

#No Rstudio:

ibd <- read.table("ibd_calculation.genome", header = T, as.is = T)
exclusions <- cbind(ibd$FID2, ibd$IID2)
ibd_excluir <- unique(exclusions)
write.table(ibd_excluir, file="individuosrelacionados.txt", col.names=F, row.names=F, quote=F)

#excluir os indivíduos relacionados
plink --bfile ptsd_genotype_QC_semXY --remove individuosrelacionados.txt --make-bed --out ptsd_QC_ibd


#dá pra fazer na linha de comando com o awk
awk '{ print $3,$4 }' ibd_calculation.genome > individuosrelacionados.txt

#8) PCA
plink --bfile ptsd_QC_ibd --pca var-wts --out ptsd_QC_pca 

#9) Plot PCA

#No RStudio:
dados_pca <-  read.table( "ptsd_QC_pca.eigenvec" )
colnames(dados_pca)[3:7] = c( "PC1","PC2","PC3","PC4","PC5" )
plot( dados_pca[,3], dados_pca[,4], xlab = "PC1", ylab = "PC2" )
pairs(dados_pca[, 3:7])

# pelo ggplot2 
library(ggplot2)
ggplot(data=dados_pca, aes(x=dados_pca$PC1, y=dados_pca$PC2)) + geom_point(shape=19, alpha=0.4, size=3)



